apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${backstage__backend__deployment__name}
  namespace: ${backstage__namespace__name}
  labels:
%{ for key, value in backstage__backend__labels ~}
    ${key}: ${value}
%{ endfor ~}
spec:
  replicas: 3
  selector:
    matchLabels:
%{ for key, value in backstage__backend__labels ~}
      ${key}: ${value}
%{ endfor ~}
  template:
    metadata:
      labels:
%{ for key, value in backstage__backend__labels ~}
        ${key}: ${value}
%{ endfor ~}
    spec:
      serviceAccountName: ${backstage__service_account__name}
      imagePullSecrets:
        - name: docker
      containers:
        - name: ${backstage__backend__container__name}
          image: ${backstage__backend__container__image}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 7007
            initialDelaySeconds: 60
            periodSeconds: 15
            failureThreshold: 5
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 7007
            initialDelaySeconds: 60
            periodSeconds: 15
            failureThreshold: 5
            timeoutSeconds: 15
          resources:
            requests:
              cpu: "128m"
              memory: "256Mi"
            limits:
              cpu: "192m"
              memory: "256Mi"
          ports:
            -  containerPort: ${backstage__backend__container__port}
          volumeMounts:
            - name: secrets
              mountPath: /etc/backstage/secrets
              readOnly: true
          env:
            - name: BACKSTAGE_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: ${backstage__secret__application_credentials}
                  key: db_host
            - name: BACKSTAGE_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: ${backstage__secret__application_credentials}
                  key: db_port
            - name: BACKSTAGE_DB_USER
              valueFrom:
                secretKeyRef:
                  name: ${backstage__secret__application_credentials}
                  key: db_user
            - name: BACKSTAGE_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: ${backstage__secret__application_credentials}
                  key: db_pass
            - name: BACKSTAGE_APP_URL
              valueFrom:
                secretKeyRef:
                  name: ${backstage__secret__application_credentials}
                  key: app_url
            - name: BACKSTAGE_BACKEND_URL
              valueFrom:
                secretKeyRef:
                  name: ${backstage__secret__application_credentials}
                  key: backend_url
            - name: GITLAB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: ${backstage__secret__application_credentials}
                  key: gitlab_token
            - name: GITLAB_DISCOVERY_URL
              valueFrom:
                secretKeyRef:
                  name: ${backstage__secret__application_credentials}
                  key: gitlab_discovery_url
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/backstage/secrets/service_account.json
      volumes:
        - name: secrets
          secret:
            secretName: ${backstage__secret__application_credentials}
            items:
            - key: service_account_json
              path: service_account.json
