apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${metadata_name}
  namespace: ${metadata_namespace}
  labels:
    ${resource_labels}
spec:
  replicas: 2
  selector:
    matchLabels:
      application: ${metadata_name}
  template:
    metadata:
      labels:
        application: ${metadata_name}
    spec:
      serviceAccountName: backstage
      imagePullSecrets:
        - name: docker
      containers:
        - name: ${metadata_name}
          image: ${repository_link}/${image_name}:${image_tag}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 7007
            initialDelaySeconds: 60
            periodSeconds: 15
            failureThreshold: 5
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 7007
            initialDelaySeconds: 60
            periodSeconds: 15
            failureThreshold: 5
            timeoutSeconds: 15
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
          ports:
            - name: http
              containerPort: 7007
          env:
            - name: BACKSTAGE_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: backstage-db-credentials
                  key: db_host
            - name: BACKSTAGE_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: backstage-db-credentials
                  key: db_port
            - name: BACKSTAGE_DB_USER
              valueFrom:
                secretKeyRef:
                  name: backstage-db-credentials
                  key: db_user
            - name: BACKSTAGE_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: backstage-db-credentials
                  key: db_pass
